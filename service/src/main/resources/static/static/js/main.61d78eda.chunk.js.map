{"version":3,"sources":["components/SimpleReactFileUpload.js","App.js","reportWebVitals.js","index.js"],"names":["SimpleReactFileUpload","props","state","file","loading","onFormSubmit","bind","onChange","fileUpload","e","preventDefault","this","setState","then","response","console","log","data","target","files","url","window","location","href","formData","FormData","append","post","headers","size","onSubmit","type","React","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAuDeA,E,kDAjDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAO,CACVC,KAAK,KACLC,SAAQ,GAEV,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,SAAW,EAAKA,SAASD,KAAd,gBAChB,EAAKE,WAAa,EAAKA,WAAWF,KAAhB,gBARD,E,gDAUnB,SAAaG,GAAG,IAAD,OACbA,EAAEC,iBACFC,KAAKC,SAAS,CAACR,SAAQ,IACvBO,KAAKH,WAAWG,KAAKT,MAAMC,MAAMU,MAAK,SAACC,GACrC,EAAKF,SAAS,CAACR,SAAQ,IACvBW,QAAQC,IAAIF,EAASG,W,sBAIzB,SAASR,GACPE,KAAKC,SAAS,CAACT,KAAKM,EAAES,OAAOC,MAAM,O,wBAErC,SAAWhB,GACT,IAAMiB,EAAMC,OAAOC,SAASC,KAAO,aAC7BC,EAAW,IAAIC,SACrBD,EAASE,OAAO,OAAOvB,GAMvB,OAAQwB,eAAKP,EAAKI,EALH,CACXI,QAAS,CACL,eAAgB,2B,oBAM1B,WACE,IAAIxB,EAAUO,KAAKT,MAAME,QAAU,cAAC,IAAD,CAASyB,KAAK,SAAW,GAC5D,OACE,uBAAMC,SAAUnB,KAAKN,aAArB,UACE,iHACA,uBAAO0B,KAAK,OAAOxB,SAAUI,KAAKJ,WAClC,wBAAQwB,KAAK,SAAb,oEACC3B,S,GA3C2B4B,IAAMC,WCQ3BC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzB,MAAK,YAAkD,IAA/C0B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.61d78eda.chunk.js","sourcesContent":["import React from 'react'\r\nimport axios, { post } from 'axios';\r\nimport Spinner from 'react-svg-spinner';\r\n\r\nclass SimpleReactFileUpload extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      file:null,\r\n      loading:false\r\n    }\r\n    this.onFormSubmit = this.onFormSubmit.bind(this)\r\n    this.onChange = this.onChange.bind(this)\r\n    this.fileUpload = this.fileUpload.bind(this)\r\n  }\r\n  onFormSubmit(e){\r\n    e.preventDefault() // Stop form submit\r\n    this.setState({loading:true})\r\n    this.fileUpload(this.state.file).then((response)=>{\r\n      this.setState({loading:false})\r\n      console.log(response.data);\r\n    })\r\n    \r\n  }\r\n  onChange(e) {\r\n    this.setState({file:e.target.files[0]})\r\n  }\r\n  fileUpload(file){\r\n    const url = window.location.href + 'uploadfile';\r\n    const formData = new FormData();\r\n    formData.append('file',file)\r\n    const config = {\r\n        headers: {\r\n            'content-type': 'multipart/form-data'\r\n        }\r\n    }\r\n    return  post(url, formData,config)\r\n  }\r\n\r\n  render() {\r\n    let loading = this.state.loading ? <Spinner size=\"16px\"/> : \"\";\r\n    return (\r\n      <form onSubmit={this.onFormSubmit}>\r\n        <h1>Загрузка файла</h1>\r\n        <input type=\"file\" onChange={this.onChange} />\r\n        <button type=\"submit\">Загрузить</button>\r\n        {loading}\r\n      </form>\r\n   )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default SimpleReactFileUpload","\nimport './App.css';\nimport SimpleReactFileUpload from './components/SimpleReactFileUpload';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SimpleReactFileUpload/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}